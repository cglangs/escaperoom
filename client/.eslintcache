[{"/Users/corygallagher/Documents/node_projects/escapegame/client/src/index.js":"1","/Users/corygallagher/Documents/node_projects/escapegame/client/src/App.js":"2","/Users/corygallagher/Documents/node_projects/escapegame/client/src/reportWebVitals.js":"3","/Users/corygallagher/Documents/node_projects/escapegame/client/src/IO.js":"4","/Users/corygallagher/Documents/node_projects/escapegame/client/src/Avatar.js":"5","/Users/corygallagher/Documents/node_projects/escapegame/client/src/Player.js":"6","/Users/corygallagher/Documents/node_projects/escapegame/client/src/Input.js":"7","/Users/corygallagher/Documents/node_projects/escapegame/client/src/World.js":"8","/Users/corygallagher/Documents/node_projects/escapegame/client/src/BillBoard.js":"9","/Users/corygallagher/Documents/node_projects/escapegame/client/src/Login.js":"10","/Users/corygallagher/Documents/node_projects/escapegame/client/src/Play.js":"11"},{"size":500,"mtime":1606972227891,"results":"12","hashOfConfig":"13"},{"size":330,"mtime":1607639294624,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1606972227892,"results":"15","hashOfConfig":"13"},{"size":2309,"mtime":1607735732483,"results":"16","hashOfConfig":"13"},{"size":2666,"mtime":1607659419372,"results":"17","hashOfConfig":"13"},{"size":2407,"mtime":1607454079796,"results":"18","hashOfConfig":"13"},{"size":1464,"mtime":1607440631988,"results":"19","hashOfConfig":"13"},{"size":16416,"mtime":1607800011504,"results":"20","hashOfConfig":"13"},{"size":1483,"mtime":1607456906218,"results":"21","hashOfConfig":"13"},{"size":451,"mtime":1607654507741,"results":"22","hashOfConfig":"13"},{"size":3065,"mtime":1607654527316,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"8ny0zg",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"/Users/corygallagher/Documents/node_projects/escapegame/client/src/index.js",[],["53","54"],"/Users/corygallagher/Documents/node_projects/escapegame/client/src/App.js",["55"],"import React from \"react\";\nimport Play from './Play'\nimport Login from './Login'\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nconst App = () => {\n\n\treturn(\n    <Router>\n        <Switch>\n          <Route path=\"/:roomId?\" children={<Play />} />\n        </Switch>\n    </Router>\t\t\n\t)\n}\n\nexport default App","/Users/corygallagher/Documents/node_projects/escapegame/client/src/reportWebVitals.js",[],"/Users/corygallagher/Documents/node_projects/escapegame/client/src/IO.js",["56","57"],"import World from './World'\nimport Avatar from './Avatar'\nimport Player from './Player'\nimport Input from './Input'\nimport io from \"socket.io-client\"\nimport { useHistory } from \"react-router-dom\";\n\n\n\nexport default class IO {\n    \n    static init() {\n            IO.currentRoomId = null\n\n            IO.socket = io(\"http://localhost:3001/\", {reconnectionDelayMax: 10000})\n\n            //IO.socket=io()\n\n            IO.socket.on(\"auth\", function(data){\n                if(data.success){\n                   IO.currentRoomId = data.roomId\n                   World.init()\n                   Player.init()\n                   Avatar.init(data.username);\n                   Input.init();\n                    //Avatar.send();\n                }\n\n                else {\n                    console.log(\"THAT ROOM DOESN'T EXIST\")\n\n                }\n            })\n\n            IO.socket.on(\"transform\", function(data){\n                console.log(data)\n                switch(data.command) {\n                case \"playerGone\":\n                    Player.remove(data);\n                    break;\n                case \"playerMoved\":\n                    Player.move(data);\n                    break;\n                }\n            })\n\n            /*IO.socket.on(\"all users\", users => {\n                const peers = [];\n                users.forEach(userID => {\n                    const peer = createPeer(userID, socketRef.current.id, stream);\n                    peersRef.current.push({\n                        peerID: userID,\n                        peer,\n                    })\n                    peers.push(peer);\n                })\n                setPeers(peers);\n            })*/\n\n\n\n        }\n\n     static login (username, roomId) {\n           IO.socket.emit('login', {username: username, roomId: roomId})\n     }\n\n}\n\n        /*Socket.ws.onmessage = (msg) => {\n            switch(msg.data) {\n                case \"playerGone\":\n                    Player.remove(json.data);\n                    break;\n                case \"playerMoved\":\n                    Player.move(json.data);\n                    break;\n            }\n        };*/\n\n        /*Socket.ws.onclose = () => {\n            alert(\"Connection closed\");\n        };\n        Socket.ws.onerror = (e) => {\n            console.log(\"Error\");\n        };\n    }*/\n\n\n","/Users/corygallagher/Documents/node_projects/escapegame/client/src/Avatar.js",["58","59","60","61","62","63"],"import BillBoard from './BillBoard'\nimport IO from './IO'\nimport { Vector3, StandardMaterial, MeshBuilder, Axis, Space, Color3} from '@babylonjs/core';\nimport Input from './Input'\nimport World from './World'\n\n\n\n\nexport default class Avatar {\n    \n    static init(username) {\n        Avatar.mesh = MeshBuilder.CreateBox(\"avatar\", {height: Avatar.height, width: 1, depth: 1}, World.scene);\n        Avatar.mesh.position = Vector3.Zero();\n        Avatar.mesh.position.y = Avatar.height/2;\n        Avatar.mesh.isVisible = false\n        //Avatar.mesh.material = new StandardMaterial(\"matAvatar\", World.scene);\n        //Avatar.mesh.material.diffuseColor = new Color3.Green();\n        Avatar.username = username;\n        //new BillBoard(Avatar.mesh, Avatar.username);\n    }   \n    \n    /*static rotate(isLeft) {\n        //Turning left\n        if (isLeft) {\n            Avatar.absoluteRotation -= Avatar.rotationSpeed;\n            Avatar.mesh.rotate(Axis.Y, Avatar.rotationSpeed, Space.WORLD);\n        //Turning right\n        } else {\n            Avatar.absoluteRotation += Avatar.rotationSpeed;            \n            Avatar.mesh.rotate(Axis.Y, -Avatar.rotationSpeed, Space.WORLD);\n        }\n    }*/\n    \n    static send() {\n        var x = Avatar.mesh.position.x;\n        var y = Avatar.mesh.position.y;\n        var z = Avatar.mesh.position.z;\n        var rotation = Avatar.absoluteRotation;\n        IO.socket.emit('transform', {command: \"playerMoved\",  x, y, z, rotation})\n    }   \n    \n    static update(position) {\n        if (Avatar.mesh !== null) {\n            Avatar.mesh.position = position\n            Avatar.send();\n\n\n            //Moving forward\n            /*if (Input.key.up) {\n        \t\tconst forward = new Vector3(Avatar.walkSpeed * Math.cos(Avatar.absoluteRotation), 0, Avatar.walkSpeed * Math.sin(Avatar.absoluteRotation));\n                Avatar.mesh.moveWithCollisions(forward);\n\n                Avatar.send();\n\n            } else if(Input.key.down){\n                const backward = new Vector3(Avatar.walkSpeed * ( -1 * Math.cos(Avatar.absoluteRotation)), 0, Avatar.walkSpeed * ( -1 * Math.sin(Avatar.absoluteRotation)));\n\n                Avatar.mesh.moveWithCollisions(backward);\n                Avatar.send();\n            }\n            //Turning left\n            if (Input.key.left) {\n                Avatar.rotate(false);\n                Avatar.send();\n            //Turning right\n            } else if (Input.key.right) {\n                Avatar.rotate(true);\n                Avatar.send();\n            }*/\n        }\n    }\n}\n\nAvatar.absoluteRotation = 0;\nAvatar.height = 3;\nAvatar.mesh = null;\nAvatar.rotationSpeed = 0.01;\nAvatar.walkSpeed = 0.007;","/Users/corygallagher/Documents/node_projects/escapegame/client/src/Player.js",["64"],"import World from './World'\nimport {MeshBuilder, Vector3, StandardMaterial, Color3, Quaternion} from '@babylonjs/core';\nimport BillBoard from './BillBoard'\n\n\nexport default class Player {\n    \n    constructor(id, username) {\n        var height = 3;\n        this.id = id;\n        this.mesh = MeshBuilder.CreateBox(\"avatar\", {height: height, width: 1, depth: 1}, World.scene);\n        this.mesh.position = Vector3.Zero();\n        this.mesh.position.x = 0;\n        this.mesh.position.y = height/2;\n        this.mesh.position.z = 0;\n        this.mesh.material = Player.material;\n        this.billboard = new BillBoard(this.mesh, username);\n        Player.all.push(this);\n    }\n    \n    //Destroy player meshes\n    destroy() {\n        this.billboard.mesh.dispose();\n        this.mesh.dispose();\n    }\n    \n    //Find existing player or create if not exists\n    static find(playerID, username) {       \n        //Check if player is in our list\n        for (var objPlayer of Player.all) {\n            if (objPlayer.id === playerID) {\n                //Found player, so lets return it\n                return(objPlayer);\n            }\n        };                \n        //Player doesn't exist, so lets create a new one\n        console.log(playerID, username)\n        return(new Player(playerID, username));\n    }\n    \n    static init() {\n        Player.material = new StandardMaterial(\"matPlayer\", World.scene);\n        Player.material.diffuseColor = new Color3.Red();        \n    }\n    \n    //Find player and move them\n    static move(data) {\n   \n        var playerID = parseInt(data.id);\n        var objPlayer = Player.find(playerID, data.username);\n        objPlayer.transform(data.x, data.y, data.z, data.rotation);\n    }\n    \n    //Remove player from world\n    static remove(data) {\n        for (var objPlayer of Player.all) {\n            if (objPlayer.id === data.id) {\n                objPlayer.destroy();\n                break;\n            }\n        }\n        \n        //Remove me from list of all players\n        Player.all = Player.all.filter((obj) => {\n            return obj.id !== data.id;\n        });\n    }\n    \n    //Change position and rotation\n    transform(x, y, z, rotation) {\n        this.mesh.position.x = x;\n        this.mesh.position.y = y;\n        this.mesh.position.z = z;\n        this.mesh.rotationQuaternion = Quaternion.FromEulerAngles(0, -rotation, 0);\n    }\n}\n\nPlayer.all = new Array();","/Users/corygallagher/Documents/node_projects/escapegame/client/src/Input.js",["65","66"],"export default class Input {\n    \n    static init() {\n        window.addEventListener(\"keydown\", this.keydownEvent);\n        window.addEventListener(\"keyup\", this.keyupEvent);\n        window.addEventListener(\"blur\", this.keyupEvent);\n    }\n\n    static keydownEvent(e) {\n        switch (e.keyCode) {\n            case 38: //UP\n            case 87: //W\n                 e.preventDefault()\n                Input.key.up = true;\n                break;\n            case 37: //LEFT\n            case 65: //A\n                Input.key.left = true;\n                break;\n            case 39: //RIGHT\n            case 68: //D\n                Input.key.right = true;\n                break;\n            case 40: //DOWN\n            case 83: //S\n                Input.key.down = true;\n                break;\n        }\n    }\n    \n    static keyupEvent(e) {\n        switch (e.keyCode) {\n            case 38: //UP\n            case 87: //W\n                e.preventDefault()\n                Input.key.up = false;\n                break;\n            case 37: //LEFT\n            case 65: //A\n                Input.key.left = false;\n                break;\n            case 39: //RIGHT\n            case 68: //D\n                Input.key.right = false;\n                break;\n            case 40: //DOWN\n            case 83: //S\n                Input.key.down = false;\n                break;\n        }\n    }\n}\n\nInput.key = {\n    down:false,\n    up:false,\n    left:false,\n    right:false\n};","/Users/corygallagher/Documents/node_projects/escapegame/client/src/World.js",["67","68","69","70","71","72","73","74","75","76"],"/Users/corygallagher/Documents/node_projects/escapegame/client/src/BillBoard.js",[],"/Users/corygallagher/Documents/node_projects/escapegame/client/src/Login.js",[],"/Users/corygallagher/Documents/node_projects/escapegame/client/src/Play.js",["77","78"],"import React, { useEffect, useRef, useState } from \"react\";\nimport IO from './IO'\nimport Login from './Login'\nimport './App.css';\nimport Peer from \"simple-peer\";\nimport { useParams } from \"react-router\";\n\n\n\n\n\nIO.init()\n\n\nconst AudioTag = (props) => {\n    const ref = useRef();\n\n    useEffect(() => {\n        props.peer.on(\"stream\", stream => {\n            ref.current.srcObject = stream;\n        })\n    }, []);\n\n    return (\n        <audio autoPlay ref={ref} />\n    );\n}\n\n\nconst Play = (props) => {\n  const [peers, setPeers] = useState([]);\n  const socketRef = useRef();\n  const userAudio = useRef();\n  const peersRef = useRef([]);\n  \n  const { roomId } = useParams();\n\n  \n  //const roomID = \"1\";\n\n   useEffect(() => {\n        socketRef.current = IO.socket\n        navigator.mediaDevices.getUserMedia({audio: true }).then(stream => {\n            //userAudio.current.srcObject = stream;\n            //socketRef.current.emit(\"join room\", roomID);\n            socketRef.current.on(\"all users\", users => {\n                const peers = [];\n                users.forEach(userID => {\n                    const peer = createPeer(userID, socketRef.current.id, stream);\n                    peersRef.current.push({\n                        peerID: userID,\n                        peer,\n                    })\n                    peers.push(peer);\n                })\n                setPeers(peers);\n            })\n\n            socketRef.current.on(\"user joined\", payload => {\n                const peer = addPeer(payload.signal, payload.callerID, stream);\n                peersRef.current.push({\n                    peerID: payload.callerID,\n                    peer,\n                })\n\n                setPeers(users => [...users, peer]);\n            });\n\n            socketRef.current.on(\"receiving returned signal\", payload => {\n                const item = peersRef.current.find(p => p.peerID === payload.id);\n                item.peer.signal(payload.signal);\n            });\n        })\n    }, []);\n\n    function createPeer(userToSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: true,\n            trickle: false,\n            stream,\n        });\n\n        peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"sending signal\", { userToSignal, callerID, signal })\n        })\n\n        return peer;\n    }\n\n    function addPeer(incomingSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: false,\n            trickle: false,\n            stream,\n        })\n\n        peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"returning signal\", { signal, callerID })\n        })\n        peer.signal(incomingSignal);\n\n        return peer;\n    }\n\n  return (\n    <div>\n\n        <Login roomId={roomId} />\n        {peers.map((peer, index) => {\n                return (\n                    <AudioTag key={index} peer={peer} />\n                );\n        })}\n        <p>{IO.currentRoomId}</p>\n        <canvas id=\"canvas\" style={{\"width\": \"100%\", \"height\": \"100%\"}}/>\n    </div>\n  )\n\n}\n\nexport default Play",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":13},{"ruleId":"83","severity":1,"message":"87","line":6,"column":10,"nodeType":"85","messageId":"86","endLine":6,"endColumn":20},{"ruleId":"88","severity":1,"message":"89","line":37,"column":17,"nodeType":"90","messageId":"91","endLine":44,"endColumn":18},{"ruleId":"83","severity":1,"message":"92","line":1,"column":8,"nodeType":"85","messageId":"86","endLine":1,"endColumn":17},{"ruleId":"83","severity":1,"message":"93","line":3,"column":19,"nodeType":"85","messageId":"86","endLine":3,"endColumn":35},{"ruleId":"83","severity":1,"message":"94","line":3,"column":50,"nodeType":"85","messageId":"86","endLine":3,"endColumn":54},{"ruleId":"83","severity":1,"message":"95","line":3,"column":56,"nodeType":"85","messageId":"86","endLine":3,"endColumn":61},{"ruleId":"83","severity":1,"message":"96","line":3,"column":63,"nodeType":"85","messageId":"86","endLine":3,"endColumn":69},{"ruleId":"83","severity":1,"message":"97","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":13},{"ruleId":"98","severity":1,"message":"99","line":78,"column":14,"nodeType":"100","messageId":"101","endLine":78,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":10,"column":9,"nodeType":"90","messageId":"91","endLine":28,"endColumn":10},{"ruleId":"88","severity":1,"message":"89","line":32,"column":9,"nodeType":"90","messageId":"91","endLine":50,"endColumn":10},{"ruleId":"83","severity":1,"message":"102","line":7,"column":27,"nodeType":"85","messageId":"86","endLine":7,"endColumn":41},{"ruleId":"83","severity":1,"message":"103","line":7,"column":42,"nodeType":"85","messageId":"86","endLine":7,"endColumn":64},{"ruleId":"83","severity":1,"message":"104","line":7,"column":121,"nodeType":"85","messageId":"86","endLine":7,"endColumn":136},{"ruleId":"88","severity":1,"message":"89","line":98,"column":9,"nodeType":"90","messageId":"91","endLine":112,"endColumn":10},{"ruleId":"105","severity":1,"message":"106","line":286,"column":56,"nodeType":"107","messageId":"108","endLine":286,"endColumn":58},{"ruleId":"105","severity":1,"message":"106","line":305,"column":56,"nodeType":"107","messageId":"108","endLine":305,"endColumn":58},{"ruleId":"105","severity":1,"message":"106","line":321,"column":56,"nodeType":"107","messageId":"108","endLine":321,"endColumn":58},{"ruleId":"105","severity":1,"message":"106","line":337,"column":56,"nodeType":"107","messageId":"108","endLine":337,"endColumn":58},{"ruleId":"83","severity":1,"message":"109","line":387,"column":13,"nodeType":"85","messageId":"86","endLine":387,"endColumn":19},{"ruleId":"83","severity":1,"message":"110","line":388,"column":13,"nodeType":"85","messageId":"86","endLine":388,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":22,"column":8,"nodeType":"113","endLine":22,"endColumn":10,"suggestions":"114"},{"ruleId":"83","severity":1,"message":"115","line":33,"column":9,"nodeType":"85","messageId":"86","endLine":33,"endColumn":18},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'BillBoard' is defined but never used.","'StandardMaterial' is defined but never used.","'Axis' is defined but never used.","'Space' is defined but never used.","'Color3' is defined but never used.","'Input' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'SetValueAction' is defined but never used.","'InterpolateValueAction' is defined but never used.","'UniversalCamera' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'light0' is assigned a value but never used.","'light1' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.peer'. Either include it or remove the dependency array.","ArrayExpression",["118"],"'userAudio' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [props.peer]",{"range":"121","text":"122"},[406,408],"[props.peer]"]