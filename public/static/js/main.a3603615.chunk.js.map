{"version":3,"sources":["BillBoard.js","Input.js","Avatar.js","World.js","Player.js","IO.js","Login.js","Play.js","App.js","reportWebVitals.js","index.js"],"names":["Billboard","playerMesh","username","console","log","this","create","mesh","MeshBuilder","CreatePlane","width","height","World","scene","position","Vector3","Zero","y","Avatar","advancedTexture","GUI","CreateForMesh","name","containerUI","thickness","addControl","text","fontFamily","fontWeight","color","outlineColor","outlineWidth","fontSize","billboardMode","Mesh","BILLBOARDMODE_ALL","parent","Input","window","addEventListener","keydownEvent","keyupEvent","e","keyCode","preventDefault","key","up","left","right","down","CreateBox","depth","isVisible","x","z","rotation","absoluteRotation","IO","socket","emit","command","cameraRotation","send","rotationSpeed","walkSpeed","DefaultLoadingScreen","prototype","displayLoadingUI","document","getElementById","style","display","_loadingDiv","createElement","id","innerHTML","customLoadingScreenCss","type","getElementsByTagName","appendChild","_resizeLoadingUI","body","canvas","engine","Engine","booksClicked","Scene","gravity","collisionsEnabled","setupCamera","setupLights","setupGround","setupWalls","runRenderLoop","render","update","camera","executeWhenReady","remove","resize","actionCode","getMeshByName","dispose","FreeCamera","attachControl","activeCamera","checkCollisions","applyGravity","ellipsoid","speed","keysUp","push","keysDown","keysRight","keysLeft","arcCamera","ArcRotateCamera","Math","PI","layerMask","ground","material","StandardMaterial","diffuseTexture","Texture","hallway","sideOrientation","DOUBLESIDE","turn","secretRoom","drawerNumber","boxColor","drawerText","myPath","boxSize","currentDrawer","CreateTube","path","tessellation","cap","radius","updatable","Color3","Blue","Green","Red","box","diffuseColor","drawerLabel","DynamicTexture","drawText","hasAlpha","Tools","ToRadians","light","HemisphericLight","CreateFullscreenUI","layer","button","CreateImageButton","horizontalAlignment","HORIZONTAL_ALIGNMENT_RIGHT","verticalAlignment","VERTICAL_ALIGNMENT_TOP","background","onPointerUpObservable","add","closeDrawer","mesh1","mesh2","input","maxWidth","VERTICAL_ALIGNMENT_BOTTOM","keyboard","addKeysRow","connect","moveFocusToControl","onBlurObservable","wall1Left","wall1HiddenDoor","wall1Right","wall2Left","wall2Right","wall2Arch","wall2Base","safeBack","safeBackBorder","safeFront","actionManager","ActionManager","registerAction","ExecuteCodeAction","trigger","OnPickTrigger","openNumPad","safeFrontBorder","wall3","wall4Left","wall4Right","wall4Arch","wall4Door","hallwayLeft","hallwayTurnLeft","secretRoomWall1","secretRoomWall2","secretRoomWall3","secretRoomWall4","roof","SceneLoader","ImportMesh","newMeshes","forEach","scaling","setUpBooks","setUpDrawers","bookNumber","bookShelfMesh","mat","alpha","book1","clickBook","book2","book3","book4","deskMesh","drawer1","openDrawer","drawer2","drawer3","drawer4","DirectionalLight","PointLight","cameraDistance","Player","billboard","BillBoard","all","rotationQuaternion","Quaternion","FromEulerAngles","playerID","objPlayer","data","parseInt","find","transform","destroy","filter","obj","Array","currentRoomId","process","io","on","success","roomId","init","move","roomModification","Login","props","useState","userName","setUsername","onChange","target","value","onClick","login","AudioTag","ref","useRef","useEffect","peer","stream","current","srcObject","autoPlay","Play","peers","setPeers","socketRef","peersRef","useParams","navigator","mediaDevices","getUserMedia","audio","then","users","userID","userToSignal","callerID","Peer","initiator","trickle","signal","createPeer","peerID","payload","incomingSignal","addPeer","p","map","index","location","href","App","children","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.a3603615.chunk.js","sourcesContent":["import Avatar from './Avatar'\nimport World from './World'\nimport {MeshBuilder, Vector3, Mesh} from '@babylonjs/core';\nimport * as GUI from '@babylonjs/gui'\n\n\n\nexport default class Billboard {\n\n    constructor(playerMesh, username) {\n        console.log(username)\n\n        this.playerMesh = playerMesh;\n        this.username = username;\n        this.create();\n    }\n    \n    create() {\n        this.mesh = MeshBuilder.CreatePlane(\"billboard\", {width: Billboard.width, height: Billboard.height}, World.scene);\n        this.mesh.position = Vector3.Zero();\n        this.mesh.position.y = Avatar.height - Billboard.height;\n        var advancedTexture = GUI.AdvancedDynamicTexture.CreateForMesh(this.mesh, 1024, 256);\n        advancedTexture.name = \"AvatarBillboard\";\n        var containerUI = new GUI.Rectangle(\"container\");\n        containerUI.thickness = 0;\n        containerUI.height = \"100px\";\n        containerUI.width = \"800px\";\n        advancedTexture.addControl(containerUI);\n        this.text = new GUI.TextBlock();\n        this.text.fontFamily = \"Arial\";\n        this.text.fontWeight = \"bold\";\n        this.text.color = \"white\";\n        this.text.outlineColor = \"black\";\n        this.text.outlineWidth = 40;\n        this.text.fontSize = 100;\n        containerUI.addControl(this.text);\n        this.text.text = this.username;\n        this.mesh.billboardMode = Mesh.BILLBOARDMODE_ALL;\n        this.mesh.parent = this.playerMesh;\n    }\n}\n\nBillboard.height = 1;\nBillboard.width = 3;","export default class Input {\n    \n    static init() {\n        window.addEventListener(\"keydown\", this.keydownEvent);\n        window.addEventListener(\"keyup\", this.keyupEvent);\n        window.addEventListener(\"blur\", this.keyupEvent);\n    }\n\n    static keydownEvent(e) {\n        switch (e.keyCode) {\n            case 38: //UP\n            case 87: //W\n                 e.preventDefault()\n                Input.key.up = true;\n                break;\n            case 37: //LEFT\n            case 65: //A\n                Input.key.left = true;\n                break;\n            case 39: //RIGHT\n            case 68: //D\n                Input.key.right = true;\n                break;\n            case 40: //DOWN\n            case 83: //S\n                Input.key.down = true;\n                break;\n        }\n    }\n    \n    static keyupEvent(e) {\n        switch (e.keyCode) {\n            case 38: //UP\n            case 87: //W\n                e.preventDefault()\n                Input.key.up = false;\n                break;\n            case 37: //LEFT\n            case 65: //A\n                Input.key.left = false;\n                break;\n            case 39: //RIGHT\n            case 68: //D\n                Input.key.right = false;\n                break;\n            case 40: //DOWN\n            case 83: //S\n                Input.key.down = false;\n                break;\n        }\n    }\n}\n\nInput.key = {\n    down:false,\n    up:false,\n    left:false,\n    right:false\n};","import BillBoard from './BillBoard'\nimport IO from './IO'\nimport { Vector3, StandardMaterial, MeshBuilder, Axis, Space, Color3} from '@babylonjs/core';\nimport Input from './Input'\nimport World from './World'\n\n\n\n\nexport default class Avatar {\n    \n    static init(username) {\n        Avatar.mesh = MeshBuilder.CreateBox(\"avatar\", {height: Avatar.height, width: 1, depth: 1}, World.scene);\n        Avatar.mesh.position = Vector3.Zero();\n        Avatar.mesh.position.y = Avatar.height/2;\n        Avatar.mesh.isVisible = false\n        //Avatar.mesh.material = new StandardMaterial(\"matAvatar\", World.scene);\n        //Avatar.mesh.material.diffuseColor = new Color3.Green();\n        Avatar.username = username;\n        //new BillBoard(Avatar.mesh, Avatar.username);\n    }   \n    \n    /*static rotate(isLeft) {\n        //Turning left\n        if (isLeft) {\n            Avatar.absoluteRotation -= Avatar.rotationSpeed;\n            Avatar.mesh.rotate(Axis.Y, Avatar.rotationSpeed, Space.WORLD);\n        //Turning right\n        } else {\n            Avatar.absoluteRotation += Avatar.rotationSpeed;            \n            Avatar.mesh.rotate(Axis.Y, -Avatar.rotationSpeed, Space.WORLD);\n        }\n    }*/\n    \n    static send() {\n        var x = Avatar.mesh.position.x;\n        var y = Avatar.mesh.position.y;\n        var z = Avatar.mesh.position.z;\n        var rotation = Avatar.absoluteRotation;\n        IO.socket.emit('transform', {command: \"playerMoved\",  x, y, z, rotation})\n    }   \n    \n    static update(position, cameraRotation) {\n        if (Avatar.mesh !== null) {\n            //console.log(position)\n            Avatar.mesh.position = position\n            Avatar.absoluteRotation += cameraRotation.y\n            //console.log(rotation)\n            //console.log(cameraRotation)\n            //console.log(cameraDirection)\n            Avatar.send();\n\n\n            //Moving forward\n            /*if (Input.key.up) {\n        \t\tconst forward = new Vector3(Avatar.walkSpeed * Math.cos(Avatar.absoluteRotation), 0, Avatar.walkSpeed * Math.sin(Avatar.absoluteRotation));\n                Avatar.mesh.moveWithCollisions(forward);\n\n                Avatar.send();\n\n            } else if(Input.key.down){\n                const backward = new Vector3(Avatar.walkSpeed * ( -1 * Math.cos(Avatar.absoluteRotation)), 0, Avatar.walkSpeed * ( -1 * Math.sin(Avatar.absoluteRotation)));\n\n                Avatar.mesh.moveWithCollisions(backward);\n                Avatar.send();\n            }\n            //Turning left\n            if (Input.key.left) {\n                Avatar.rotate(false);\n                Avatar.send();\n            //Turning right\n            } else if (Input.key.right) {\n                Avatar.rotate(true);\n                Avatar.send();\n            }*/\n        }\n    }\n}\n\nAvatar.absoluteRotation = 0;\nAvatar.height = 3;\nAvatar.mesh = null;\nAvatar.rotationSpeed = 0.01;\nAvatar.walkSpeed = 0.007;","import Avatar from './Avatar'\n//import Chat from './Chat'\nimport '@babylonjs/loaders';\nimport 'babylonjs-loaders';\n//import BoomBox from './BoomBox'\nimport * as GUI from '@babylonjs/gui'\nimport IO from './IO'\nimport {DefaultLoadingScreen, DynamicTexture, Vector4,ExecuteCodeAction,SetValueAction,InterpolateValueAction,SceneLoader, FreeCamera,ArcRotateCamera, ActionManager, UniversalCamera,Color3, Vector3, StandardMaterial,HemisphericLight,DirectionalLight,PointLight, Texture, MeshBuilder, Engine, Scene, Mesh, Tools} from '@babylonjs/core';\n\n\nDefaultLoadingScreen.prototype.displayLoadingUI = function () {\n    if (document.getElementById(\"customLoadingScreenDiv\")) {\n        // Do not add a loading screen if there is already one\n        document.getElementById(\"customLoadingScreenDiv\").style.display = \"initial\";\n        return;\n    }\n    this._loadingDiv = document.createElement(\"div\");\n    this._loadingDiv.id = \"customLoadingScreenDiv\";\n    this._loadingDiv.innerHTML = \"Preparing room...\";\n    var customLoadingScreenCss = document.createElement('style');\n    customLoadingScreenCss.type = 'text/css';\n    customLoadingScreenCss.innerHTML = `\n    #customLoadingScreenDiv{\n        background-color: lightBlue;\n        color: white;\n        font-size:50px;\n        text-align:center;\n        padding-top: 20%;\n    }\n    `;\n    document.getElementsByTagName('head')[0].appendChild(customLoadingScreenCss);\n    this._resizeLoadingUI();\n    window.addEventListener(\"resize\", this._resizeLoadingUI);\n    document.body.appendChild(this._loadingDiv);\n};\n\nexport default class World {\n    static init() {\n        World.canvas = document.getElementById(\"canvas\");\n        var engine = new Engine(World.canvas, true);\n        //World.is_loaded = false\n        World.booksClicked = 0;\n\n        \n        World.scene = new Scene(engine);\n        World.scene.gravity = new Vector3(0, -0.9, 0);\n        World.scene.collisionsEnabled = true;\n\n\n\n        World.setupCamera();        \n        World.setupLights();\n        World.setupGround();\n        World.setupWalls();\n        //Chat.init()\n\n        engine.runRenderLoop(() => {\n            //console.log(World.is_loaded)\n            //if(World.is_loaded){\n                World.scene.render();\n                Avatar.update(World.camera.position, World.camera.cameraRotation);\n            //}\n\n            //World.updateCamera();\n        });    \n\n        engine.displayLoadingUI();\n    \n        World.scene.executeWhenReady(function() {\n            //engine.hideLoadingUI();\n            var myobj = document.getElementById(\"customLoadingScreenDiv\");\n            myobj.remove();\n        }) \n        \n        //Resize event\n        window.addEventListener(\"resize\", () => {\n            engine.resize();\n        });\n\n\n        /*var loadingScreen = new CustomLoadingScreen(\"I'm loading!!\");\n        // replace the default loading screen\n        engine.loadingScreen = loadingScreen;\n        // show the loading screen\n        engine.displayLoadingUI();*/\n\n    }\n\n    static roomModification(actionCode){\n        switch (actionCode) {\n          case 1:\n            World.scene.getMeshByName(\"safeFront\").dispose()\n            World.scene.getMeshByName(\"safeFrontBorder\").dispose()\n            break;\n\n        }\n\n\n    }\n    \n    static setupCamera() {\n        /*World.camera = new FreeCamera(\"firstPersonCam\", Vector3.Zero(), World.scene);\n        World.camera.ellipsoid = new Vector3(0.1, 0.1, 0.1);\n        World.camera.checkCollisions = true;\n        World.camera.speed = 0.1\n        World.camera.applyGravity = true;\n\n        //World.camera.position.x -= Math.sin(-Math.PI/2) * -1 * World.cameraDistance;\n        World.camera.position.y = 0.7;\n        World.camera.attachControl(World.canvas, true)\n        //World.camera.position.z -= Math.cos(-Math.PI/2) * -1 * World.cameraDistance;\n        //var lookAt = Vector3.Zero();\n        //lookAt.y = Avatar.height + Avatar.height/2;\n        //World.camera.setTarget(lookAt);*/\n        World.camera = new FreeCamera(\"FreeCamera\", new Vector3(-5,2,-5), World.scene);\n        //World.camera = new FreeCamera(\"FreeCamera\", new Vector3(15,2,20), World.scene);\n        World.camera.attachControl(World.canvas, true);\n        //World.scene.activeCameras.push(World.camera);\n        World.scene.activeCamera = World.camera\n        World.camera.checkCollisions = true;\n        World.camera.applyGravity = true;\n        World.camera.ellipsoid = new Vector3(1.1, 1, 1.1);\n        World.camera.speed = 0.1\n        World.camera.keysUp.push(87);\n        World.camera.keysDown.push(83)\n        World.camera.keysRight.push(68)\n        World.camera.keysLeft.push(65)\n\n        World.arcCamera = new ArcRotateCamera(\"ArcCamera\", 3 * Math.PI / 2, 3 * Math.PI / 8, 3, new Vector3(0, 0, 0), World.scene);\n        World.arcCamera.layerMask = 0x10000000;\n    }\n    \n    static setupGround() {\n        /*var ground = MeshBuilder.CreateGround(\"ground\", {height: 3, width: 3, subdivisions: 4}, World.scene);\n        ground.checkCollisions = true;\n        ground.position = Vector3.Zero();\n        ground.material = new StandardMaterial(\"matGround\", World.scene);\n        ground.material.diffuseTexture = new Texture(\"ground.jpg\", World.scene);*/\n        var ground = Mesh.CreatePlane(\"ground\", 20.0, World.scene);\n        ground.material = new StandardMaterial(\"groundMat\", World.scene);\n        ground.material.diffuseTexture = new Texture(\"wood_floor_texture.jpg\", World.scene);\n        ground.position = new Vector3(0,0,0);\n        ground.rotation = new Vector3(Math.PI / 2, 0, 0);\n        ground.checkCollisions = true;\n\n        var hallway = MeshBuilder.CreatePlane(\"hallway\", {width: 4, height: 10, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        hallway.position = new Vector3(5,0,15)\n        //hallway.material = new StandardMaterial(\"\", World.scene);\n        //hallway.material.diffuseTexture = new Texture(\"wood_floor_texture.jpg\", World.scene);\n        hallway.rotation = new Vector3(Math.PI / 2, 0, 0);\n        hallway.checkCollisions = true;\n\n\n        var turn = MeshBuilder.CreatePlane(\"turn\", {width: 8, height: 4, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        turn.position = new Vector3(7,0,20)\n        //hallway.material = new StandardMaterial(\"\", World.scene);\n        //hallway.material.diffuseTexture = new Texture(\"wood_floor_texture.jpg\", World.scene);\n        turn.rotation = new Vector3(Math.PI / 2, 0, 0);\n        turn.checkCollisions = true;\n\n\n        var secretRoom = MeshBuilder.CreatePlane(\"secretRoom\", {width: 8, height: 10, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        secretRoom.position = new Vector3(15,0,20)\n        //hallway.material = new StandardMaterial(\"\", World.scene);\n        //hallway.material.diffuseTexture = new Texture(\"wood_floor_texture.jpg\", World.scene);\n        secretRoom.rotation = new Vector3(Math.PI / 2, 0, 0);\n        secretRoom.checkCollisions = true;\n\n\n    }\n\n\n    static openDrawer(drawerNumber){\n        var boxSize = 1;\n        var myPath = [\n                 new Vector3(0, 0.0, 0),\n                new Vector3(0, boxSize/2, 0)\n        ];\n        var currentDrawer = MeshBuilder.CreateTube(\"currentDrawer\", {path: myPath, tessellation:4, cap: 1, radius: boxSize, sideOrientation: Mesh.DOUBLESIDE, updatable: true}, World.scene);\n        currentDrawer.material = new StandardMaterial(\"\", World.scene);\n        currentDrawer.material.diffuseTexture = new Texture(\"desk_texture.png\", World.scene);\n        currentDrawer.layerMask = 0x10000000;\n        let boxColor, drawerText\n        switch (drawerNumber) {\n          case 1:\n            boxColor =  new Color3.Blue() \n            drawerText = \"I\"\n            break;\n          case 2:\n            boxColor =  new Color3(0, 206/255, 209/255)\n            drawerText = \"II\"\n            break;\n          case 3:\n            boxColor = new Color3.Green()\n            drawerText = \"III\"\n            break;\n          case 4:\n            boxColor = new Color3.Red()\n            drawerText = \"IV\"\n            break;\n\n        }\n\n        var box = MeshBuilder.CreateBox(\"clue\", {width: 0.1, height: 0.1, depth: 0.1, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        box.position.y = 0.051;\n        box.material = new StandardMaterial(\"\", World.scene);\n        box.material.diffuseColor = boxColor;\n        box.parent =  currentDrawer\n        box.layerMask = 0x10000000;\n\n\n        var drawerLabel = MeshBuilder.CreatePlane(\"drawerLabel\", {width: 1, height: 1, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        drawerLabel.position.y = -0.001;\n        drawerLabel.material = new StandardMaterial(\"\", World.scene);\n        drawerLabel.material.diffuseTexture = new DynamicTexture(\"dynamic texture\", {width:512, height:256}, World.scene); \n        drawerLabel.material.diffuseTexture.drawText(drawerText, 100, 100, \"bold 70px Segoe UI\", \"black\", \"transparent\", true, true);\n        drawerLabel.material.diffuseTexture.hasAlpha = true;\n        drawerLabel.rotation = new Vector3(Tools.ToRadians(90),0,0);\n        drawerLabel.parent =  currentDrawer\n        drawerLabel.layerMask = 0x10000000;\n\n\n\n\n\n\n        World.scene.activeCamera = World.arcCamera\n        World.arcCamera.attachControl(World.canvas, true);\n        var light = new HemisphericLight(\"light1\", new Vector3(1, 1, 0.5), World.scene);\n\n\n\n\n        var advancedTexture = GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\n        advancedTexture.layer.layerMask = 0x10000000;\n\n        var button = GUI.Button.CreateImageButton(\"but\", \"Return\", \"\");\n        button.horizontalAlignment = GUI.Control.HORIZONTAL_ALIGNMENT_RIGHT;\n        button.verticalAlignment = GUI.Control.VERTICAL_ALIGNMENT_TOP;\n        button.width = 0.1;\n        button.height = \"40px\";\n        button.color = \"white\";\n        button.background = \"green\";\n        button.onPointerUpObservable.add(function() {\n            World.closeDrawer(currentDrawer,light)\n        });\n        advancedTexture.addControl(button);\n\n\n    }\n\n    static closeDrawer(currentDrawer,light){\n        currentDrawer.dispose();\n        World.scene.activeCamera = World.camera\n        light.dispose()\n    }\n\n\n    static openNumPad(mesh1,mesh2){\n        var advancedTexture = GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\n\n        var input = new GUI.InputText();\n        input.width = 0.05;\n        input.maxWidth = 0.05;\n        input.height = \"40px\";\n        input.color = \"white\";\n        input.background = \"black\";\n        advancedTexture.addControl(input);\n\n\n        var button = GUI.Button.CreateImageButton(\"SubmitButton\", \"Submit\", \"\");\n        button.horizontalAlignment = GUI.Control.HORIZONTAL_ALIGNMENT_RIGHT;\n        button.verticalAlignment = GUI.Control.VERTICAL_ALIGNMENT_BOTTOM;\n        button.width = 0.1;\n        button.height = \"40px\";\n        button.color = \"white\";\n        button.background = \"black\";\n        /*button.onPointerUpObservable.add(function() {\n            mesh1.dispose()\n            mesh2.dispose()\n            input.dispose()\n            button.dispose()\n        });*/\n        advancedTexture.addControl(button);\n\n        var keyboard = new GUI.VirtualKeyboard();\n        keyboard.addKeysRow([\n          \"1\",\n          \"2\",\n          \"3\",\n          \"4\",\n          \"5\",\n          \"6\",\n          \"7\",\n          \"8\",\n          \"9\",\n          \"0\",\n          \"\\u2190\"\n        ]);\n        keyboard.verticalAlignment = GUI.Control.VERTICAL_ALIGNMENT_BOTTOM;\n        advancedTexture.addControl(keyboard);\n        keyboard.connect(input);\n        advancedTexture.moveFocusToControl(input)\n\n        input.onBlurObservable.add(function() {\n            if (1===1) {\n                mesh1.dispose()\n                mesh2.dispose()\n                input.dispose()\n                button.dispose()\n                IO.socket.emit('room modified', {actionCode: 1})\n           }\n        });\n\n    }\n\n \n\n\n    static setupWalls(){\n        var wall1Left = MeshBuilder.CreateBox(\"wall1Left\", {width: 13, height: 10, depth: 2, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        wall1Left.checkCollisions = true;\n        wall1Left.material = new StandardMaterial(\"\"); \n        wall1Left.position = new Vector3(-3.5,1,11);\n        wall1Left.material.diffuseTexture = new Texture(\"office_wall_texture.jpg\", World.scene);\n\n        var wall1HiddenDoor = MeshBuilder.CreateBox(\"wall1HiddenDoor\", {width: 4, height: 10, depth: 2, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        wall1HiddenDoor.checkCollisions = true;\n        wall1HiddenDoor.material = new StandardMaterial(\"\"); \n        wall1HiddenDoor.position = new Vector3(5,1,11);\n        wall1HiddenDoor.material.diffuseTexture = new Texture(\"office_wall_texture.jpg\", World.scene);\n\n        var wall1Right = MeshBuilder.CreateBox(\"wall1Right\", {width: 3, height: 10, depth: 2, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        wall1Right.checkCollisions = true;\n        wall1Right.material = new StandardMaterial(\"\"); \n        wall1Right.position = new Vector3(8.5,1,11);\n        wall1Right.material.diffuseTexture = new Texture(\"office_wall_texture.jpg\", World.scene);\n        /*var wall2 = MeshBuilder.CreateBox(\"wall2\", {width: 20, height: 10, depth: 2, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        wall2.checkCollisions = true;\n        wall2.position = new Vector3(11,1,0);\n        wall2.material = new StandardMaterial(\"\");\n        wall2.rotation = new Vector3(0,Tools.ToRadians(90),0);\n        wall2.material.diffuseTexture = new Texture(\"office_wall_texture.jpg\", World.scene);*/\n\n        var wall2Left = MeshBuilder.CreateBox(\"wall2Left\", {width: 8, height: 10, depth: 2, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        wall2Left.checkCollisions = true;\n        wall2Left.position = new Vector3(11,1,-6);\n        wall2Left.material = new StandardMaterial(\"\");\n        wall2Left.rotation = new Vector3(0,Tools.ToRadians(90),0);\n        wall2Left.material.diffuseTexture = new Texture(\"office_wall_texture.jpg\", World.scene);\n\n        var wall2Right = MeshBuilder.CreateBox(\"wall2Right\", {width: 8, height: 10, depth: 2, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        wall2Right.checkCollisions = true;\n        wall2Right.position = new Vector3(11,1,6);\n        wall2Right.material = new StandardMaterial(\"\");\n        wall2Right.rotation = new Vector3(0,Tools.ToRadians(90),0);\n        wall2Right.material.diffuseTexture = new Texture(\"office_wall_texture.jpg\", World.scene);\n\n        var wall2Arch = MeshBuilder.CreateBox(\"wall2Arch\", {width: 4, height: 4, depth: 2, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        wall2Arch.checkCollisions = true;\n        wall2Arch.position = new Vector3(11,4,0);\n        wall2Arch.material = new StandardMaterial(\"\");\n        wall2Arch.rotation = new Vector3(0,Tools.ToRadians(90),0);\n        wall2Arch.material.diffuseTexture = new Texture(\"office_wall_texture.jpg\", World.scene);\n\n        var wall2Base = MeshBuilder.CreateBox(\"wall2Base\", {width: 4, height: 2, depth: 2, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        wall2Base.checkCollisions = true;\n        wall2Base.position = new Vector3(11,-1,0);\n        wall2Base.material = new StandardMaterial(\"\");\n        wall2Base.rotation = new Vector3(0,Tools.ToRadians(90),0);\n        wall2Base.material.diffuseTexture = new Texture(\"office_wall_texture.jpg\", World.scene);\n\n\n        var safeBack = MeshBuilder.CreatePlane(\"safeBack\", {height:5, width: 4}, World.scene)\n        safeBack.position = new Vector3(12, 1, 0)\n        safeBack.material = new StandardMaterial(\"\", World.scene);\n        safeBack.rotation = new Vector3(0,Tools.ToRadians(90),0);\n        safeBack.checkCollisions = true\n\n        var safeBackBorder = MeshBuilder.CreatePlane(\"safeBackBorder\", {height:5, width: 4}, World.scene)\n        safeBackBorder.position = new Vector3(11.5, 1, 0)\n        safeBackBorder.rotation = new Vector3(0,Tools.ToRadians(90),0);\n        safeBackBorder.checkCollisions = true\n        safeBackBorder.isVisible = false; \n\n\n        var safeFront = MeshBuilder.CreatePlane(\"safeFront\", {height:2, width: 4}, World.scene)\n        safeFront.position = new Vector3(10, 1, 0)\n        safeFront.material = new StandardMaterial(\"\", World.scene);\n        safeFront.rotation = new Vector3(0,Tools.ToRadians(90),0);\n        safeFront.material.diffuseTexture = new Texture(\"safe_texture.png\", World.scene);\n        safeBack.checkCollisions = true\n\n        safeFront.actionManager = new ActionManager(World.scene);\n        safeFront.actionManager.registerAction(\n            new ExecuteCodeAction(\n                {\n                    trigger: ActionManager.OnPickTrigger\n                    //parameter: 'r'\n                },\n                function () { World.openNumPad(safeFront, safeFrontBorder)}\n            )\n        );\n\n\n\n        var safeFrontBorder = MeshBuilder.CreatePlane(\"safeFrontBorder\", {height:2, width: 4}, World.scene)\n        safeFrontBorder.position = new Vector3(9.5, 1, 0);\n        safeFrontBorder.rotation = new Vector3(0,Tools.ToRadians(90),0);\n        safeFrontBorder.checkCollisions = true;\n        safeFrontBorder.isVisible = false; \n\n\n\n\n\n        var wall3 = MeshBuilder.CreateBox(\"wall3\", {width: 20, height: 10, depth: 2, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        wall3.checkCollisions = true;\n        wall3.material = new StandardMaterial(\"\"); \n        wall3.position = new Vector3(0,1,-11);\n        wall3.material.diffuseTexture = new Texture(\"office_wall_texture.jpg\", World.scene);\n\n\n        var wall4Left = MeshBuilder.CreateBox(\"wall4Left\", {width: 8, height: 10, depth: 2, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        wall4Left.checkCollisions = true;\n        wall4Left.position = new Vector3(-11,1,-6);\n        wall4Left.material = new StandardMaterial(\"\");\n        wall4Left.rotation = new Vector3(0,Tools.ToRadians(90),0);\n        wall4Left.material.diffuseTexture = new Texture(\"office_wall_texture.jpg\", World.scene);\n\n        var wall4Right = MeshBuilder.CreateBox(\"wall4Right\", {width: 8, height: 10, depth: 2, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        wall4Right.checkCollisions = true;\n        wall4Right.position = new Vector3(-11,1,6);\n        wall4Right.material = new StandardMaterial(\"\");\n        wall4Right.rotation = new Vector3(0,Tools.ToRadians(90),0);\n        wall4Right.material.diffuseTexture = new Texture(\"office_wall_texture.jpg\", World.scene);\n\n        var wall4Arch = MeshBuilder.CreateBox(\"wall4Arch\", {width: 4, height: 2, depth: 2, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        wall4Arch.checkCollisions = true;\n        wall4Arch.position = new Vector3(-11,5,0);\n        wall4Arch.material = new StandardMaterial(\"\");\n        wall4Arch.rotation = new Vector3(0,Tools.ToRadians(90),0);\n        wall4Arch.material.diffuseTexture = new Texture(\"office_wall_texture.jpg\", World.scene);\n\n        var wall4Door = MeshBuilder.CreateBox(\"wall4Door\", {width: 4, height: 4, depth: 2, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        wall4Door.checkCollisions = true;\n        wall4Door.position = new Vector3(-11,2,0);\n        wall4Door.material = new StandardMaterial(\"\");\n        wall4Door.rotation = new Vector3(0,Tools.ToRadians(90),0);\n        wall4Door.material.diffuseTexture = new Texture(\"double_door_texture.jpg\", World.scene);\n\n\n        var hallwayLeft = MeshBuilder.CreateBox(\"hallwayLeft\", {width: 12, height: 10, depth: 2, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        hallwayLeft.checkCollisions = true;\n        hallwayLeft.position = new Vector3(2,0,18)\n        hallwayLeft.material = new StandardMaterial(\"\");\n        hallwayLeft.rotation = new Vector3(0,Tools.ToRadians(90),0);\n\n\n        var hallwayTurnLeft = MeshBuilder.CreateBox(\"hallwayTurnLeft\", {width: 8, height: 10, depth: 4, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        hallwayTurnLeft.checkCollisions = true;\n        hallwayTurnLeft.position =  new Vector3(7,0,24)\n        hallwayTurnLeft.material = new StandardMaterial(\"\");\n\n        var secretRoomWall1 = MeshBuilder.CreateBox(\"secretRoomWall1\", {width: 8, height: 10, depth: 2, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        secretRoomWall1.checkCollisions = true;\n        secretRoomWall1.position = new Vector3(15,0,25)\n        secretRoomWall1.material = new StandardMaterial(\"\");\n\n        var secretRoomWall2 = MeshBuilder.CreateBox(\"secretRoomWall2\", {width: 10, height: 10, depth: 2, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        secretRoomWall2.checkCollisions = true;\n        secretRoomWall2.position = new Vector3(20,0,20)\n        secretRoomWall2.material = new StandardMaterial(\"\");\n        secretRoomWall2.rotation = new Vector3(0,Tools.ToRadians(90),0);\n\n        var secretRoomWall3 = MeshBuilder.CreateBox(\"secretRoomWall3\", {width: 8, height: 10, depth: 2, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        secretRoomWall3.checkCollisions = true;\n        secretRoomWall3.position = new Vector3(15,0,15)\n        secretRoomWall3.material = new StandardMaterial(\"\");\n\n        var secretRoomWall4 = MeshBuilder.CreateBox(\"secretRoomWall4\", {width: 7, height: 10, depth: 4, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        secretRoomWall4.checkCollisions = true;\n        secretRoomWall4.position = new Vector3(9,0,15.5)\n        secretRoomWall4.material = new StandardMaterial(\"\");\n        secretRoomWall4.rotation = new Vector3(0,Tools.ToRadians(90),0);\n\n\n\n        /*var secretRoom = MeshBuilder.CreatePlane(\"secretRoom\", {width: 8, height: 10, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        secretRoom.position = new Vector3(15,0,20)\n        //hallway.material = new StandardMaterial(\"\", World.scene);\n        //hallway.material.diffuseTexture = new Texture(\"wood_floor_texture.jpg\", World.scene);\n        secretRoom.rotation = new Vector3(Math.PI / 2, 0, 0);\n        secretRoom.checkCollisions = true;*/\n\n        var roof = MeshBuilder.CreateBox(\"roof\", {width: 20, height: 2, depth: 20, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        roof.position = new Vector3(0,7,0);\n        roof.material = new StandardMaterial(\"\");\n        roof.material.diffuseTexture = new Texture(\"wall_texture.jpg\", World.scene);\n\n        SceneLoader.ImportMesh(\"\",\"\",\"plant_with_color.babylon\", World.scene, function(newMeshes){\n            newMeshes.forEach((mesh) => {\n            mesh.position = mesh.position.add(new Vector3(-3,0,-3))\n            mesh.scaling = new Vector3(0.4, 0.4, 0.4);\n            //mesh.checkCollisions = true;\n            //console.log(mesh)\n            //mesh.showBoundingBox = true\n            })\n            //console.log(newMeshes[1].getBoundingInfo().boundingBox.extendSize.scale(2))\n            var box = MeshBuilder.CreateBox(\"myBox\", {height: 13, width: 3, depth: 3}, World.scene);\n            box.isVisible = false;    \n            box.parent =  newMeshes[1];\n            box.checkCollisions = true;\n\n\n\n    \n            //do nothing\n        })\n\n         SceneLoader.ImportMesh(\"\",\"\",\"bookshelfFrida.babylon\", World.scene, function(newMeshes){\n            console.log(newMeshes)\n            newMeshes.forEach((mesh) => {\n            mesh.parent = wall1Left\n\n            mesh.scaling = new Vector3(0.45, 0.45, 0.45);\n            mesh.rotation = new Vector3(Tools.ToRadians(-90),Tools.ToRadians(180),0);\n            mesh.position = mesh.position.add(new Vector3(8,1,-2))\n            //mesh.checkCollisions = true;\n            //console.log(mesh)\n            //mesh.showBoundingBox = true\n            })\n            //console.log(newMeshes[0].getBoundingInfo().boundingBox.extendSize.scale(2))\n            var box = MeshBuilder.CreateBox(\"fridaBox\", {height: 10, width: 6, depth: 5}, World.scene);\n            box.position = box.position.add(new Vector3(3,0,-2))\n            box.rotation = new Vector3(Tools.ToRadians(-90),0,0);\n\n            box.isVisible = false;   \n            box.parent =  newMeshes[0];\n            box.checkCollisions = true;\n            World.setUpBooks(newMeshes[0], wall1HiddenDoor)\n\n\n\n    \n            //do nothing\n        })\n\n        SceneLoader.ImportMesh(\"\",\"\",\"chair.glb\", World.scene, function(newMeshes){\n            newMeshes.forEach((mesh) => {\n            //mesh.scaling = new Vector3(10, 10, 10);\n            mesh.scaling = new Vector3(1.5, 1.5, 1.5);\n\n            mesh.position = new Vector3(6,0,-5)\n            //mesh.checkCollisions = true;\n            //mesh.showBoundingBox = true\n\n            })\n            //newMeshes[1].checkCollisions = true;\n            //console.log(newMeshes[1].getBoundingInfo().boundingBox.extendSize.scale(2))\n            var box = MeshBuilder.CreateBox(\"chairBox\", {height: 2, width: 0.55, depth: 0.7}, World.scene);\n            box.isVisible = false;    \n            //box.setPositionWithLocalVector(new Vector3(0, 1, 0))\n            box.parent =  newMeshes[1];\n            box.checkCollisions = true;\n            //do nothing\n        })\n\n        SceneLoader.ImportMesh(\"\",\"\",\"desk.glb\", World.scene, function(newMeshes){\n            newMeshes.forEach((mesh) => {\n            //mesh.scaling = new Vector3(10, 10, 10);\n            mesh.scaling = new Vector3(1.5, 1.5, 1.5);\n\n            mesh.position = new Vector3(10,0,-10)\n\n            //mesh.checkCollisions = true;\n            //console.log(newMeshes[1].getBoundingInfo().boundingBox.extendSize.scale(2))\n            //mesh.showBoundingBox = true\n            //console.log(mesh)\n            })\n\n            var box = MeshBuilder.CreateBox(\"deskBox\", {height: 2, width: 1.5, depth: 1}, World.scene);\n            box.isVisible = false;    \n            //box.setPositionWithLocalVector(new Vector3(0, 1, 0))\n            box.parent =  newMeshes[1];\n            box.checkCollisions = true;\n            World.setUpDrawers(newMeshes[1])\n\n         })\n\n        SceneLoader.ImportMesh(\"\",\"\",\"clock.glb\", World.scene, function(newMeshes){\n            newMeshes.forEach((mesh) => {\n            mesh.parent = wall1Left\n            mesh.position = mesh.position.add(new Vector3(-2,2,-1))\n            mesh.rotation = new Vector3(Tools.ToRadians(-90),0,0);\n            mesh.scaling = new Vector3(3.5, 3.5, 3.5)\n            })\n\n         })\n\n\n\n\n\n\n      /*drawer1.actionManager.registerAction(\n            new InterpolateValueAction(\n                ActionManager.OnPickTrigger,\n                wall4Door,\n                'visibility',\n                0\n            )).then(\n            new InterpolateValueAction(\n                ActionManager.OnPickTrigger,\n                wall4Door,\n                'visibility',\n                1.0\n            )\n       )*/\n\n\n\n\n        /*var box = Mesh.CreateBox(\"crate\", 2, World.scene);\n        box.material = new StandardMaterial(\"Mat\", World.scene);\n        box.position = new Vector3(0,1,5);\n        box.checkCollisions = true;\n        box.actionManager = new ActionManager(World.scene);\n        box.actionManager.registerAction(\n            new InterpolateValueAction(\n                ActionManager.OnPickTrigger,\n                wall4Door,\n                'visibility',\n                0\n            )).then(\n            new InterpolateValueAction(\n                ActionManager.OnPickTrigger,\n                wall4Door,\n                'visibility',\n                1.0\n            )\n       )*/\n\n    }\n\n    static clickBook(bookNumber,wall1HiddenDoor){\n        if(bookNumber === 1){\n            World.booksClicked = 1\n        }\n        else if(bookNumber === World.booksClicked + 1){\n            World.booksClicked += 1\n            //make sound effect\n        }\n        if(World.booksClicked === 4){\n            wall1HiddenDoor.dispose()\n            //open wall\n        }\n\n    }\n\n    static setUpBooks(bookShelfMesh,wall1HiddenDoor){\n\n        var mat = new StandardMaterial(\"invisible\", World.scene);\n        mat.alpha = 0;\n\n        var book1 = MeshBuilder.CreatePlane(\"book1\", {height:0.9, width: 0.14, sideOrientation: Mesh.DOUBLESIDE}, World.scene)\n        book1.parent = bookShelfMesh\n        //book1.position = new Vector3(0.355,0.595,0.30)\n        book1.position = book1.position.add(new Vector3(3.2,-1.2,-5.2))\n        book1.rotation = new Vector3(Tools.ToRadians(90),0,0);\n        book1.material = new StandardMaterial(\"\", World.scene);\n        book1.material.diffuseColor = new Color3.Green();\n        book1.material = mat;\n\n        book1.actionManager = new ActionManager(World.scene);\n        book1.actionManager.registerAction(\n            new ExecuteCodeAction(\n                {\n                    trigger: ActionManager.OnPickTrigger\n                    //parameter: 'r'\n                },\n                function () {World.clickBook(3,wall1HiddenDoor) }\n            )\n        );\n\n        var book2 = MeshBuilder.CreatePlane(\"book2\", {height:0.9, width: 0.14, sideOrientation: Mesh.DOUBLESIDE}, World.scene)\n        book2.parent = bookShelfMesh\n        //book1.position = new Vector3(0.355,0.595,0.30)\n        book2.position = book2.position.add(new Vector3(3.04,-1.2,-5.2))\n        book2.rotation = new Vector3(Tools.ToRadians(90),0,0);\n        book2.material = new StandardMaterial(\"\", World.scene);\n        book2.material.diffuseColor = new Color3.Red();\n        book2.material = mat;\n        //book2.isVisible = false\n\n\n        book2.actionManager = new ActionManager(World.scene);\n        book2.actionManager.registerAction(\n            new ExecuteCodeAction(\n                {\n                    trigger: ActionManager.OnPickTrigger\n                    //parameter: 'r'\n                },\n                function () {World.clickBook(4,wall1HiddenDoor) }\n            )\n        );\n\n        var book3 = MeshBuilder.CreatePlane(\"book3\", {height:0.9, width: 0.14, sideOrientation: Mesh.DOUBLESIDE}, World.scene)\n        book3.parent = bookShelfMesh\n        //book1.position = new Vector3(0.355,0.595,0.30)\n        book3.position = book3.position.add(new Vector3(2.86,-1.2,-5.2))\n        book3.rotation = new Vector3(Tools.ToRadians(90),0,0);\n        book3.material = new StandardMaterial(\"\", World.scene);\n        book3.material.diffuseColor = new Color3.Blue();\n        book3.material = mat;\n        //book3.isVisible = false\n\n\n        book3.actionManager = new ActionManager(World.scene);\n        book3.actionManager.registerAction(\n            new ExecuteCodeAction(\n                {\n                    trigger: ActionManager.OnPickTrigger\n                    //parameter: 'r'\n                },\n                function () {World.clickBook(1,wall1HiddenDoor) }\n            )\n        );\n\n        var book4 = MeshBuilder.CreatePlane(\"book4\", {height:0.9, width: 0.14, sideOrientation: Mesh.DOUBLESIDE}, World.scene)\n        book4.parent = bookShelfMesh\n        //book1.position = new Vector3(0.355,0.595,0.30)\n        book4.position = book4.position.add(new Vector3(2.68,-1.2,-5.2))\n        book4.rotation = new Vector3(Tools.ToRadians(90),0,0);\n        book4.material = new StandardMaterial(\"\", World.scene);\n        book4.material.diffuseColor = new Color3(0, 206/255, 209/255)\n        book4.material = mat;\n        //book4.isVisible = false\n\n        book4.actionManager = new ActionManager(World.scene);\n        book4.actionManager.registerAction(\n            new ExecuteCodeAction(\n                {\n                    trigger: ActionManager.OnPickTrigger\n                    //parameter: 'r'\n                },\n                function () {World.clickBook(2,wall1HiddenDoor) }\n            )\n        );\n    }\n\n    static setUpDrawers(deskMesh) {\n        var drawer1 = MeshBuilder.CreatePlane(\"plane1\", {height:0.14, width: 0.46, sideOrientation: Mesh.DOUBLESIDE}, World.scene)\n        drawer1.parent = deskMesh\n        drawer1.position = new Vector3(0.355,0.595,0.30)\n        drawer1.material = new StandardMaterial(\"\", World.scene);\n        drawer1.material.diffuseColor = new Color3.Green();\n\n        drawer1.actionManager = new ActionManager(World.scene);\n        drawer1.actionManager.registerAction(\n            new ExecuteCodeAction(\n                {\n                    trigger: ActionManager.OnPickTrigger\n                    //parameter: 'r'\n                },\n                function () { World.scene.activeCamera == World.camera ? World.openDrawer(1) : World.closeDrawer()}\n            )\n        );\n  \n\n        var drawer2 = MeshBuilder.CreatePlane(\"plane2\", {height:0.14, width: 0.46, sideOrientation: Mesh.DOUBLESIDE}, World.scene)\n        drawer2.parent = deskMesh\n        drawer2.position = new Vector3(0.355,0.445,0.30)\n        drawer2.material = new StandardMaterial(\"\", World.scene);\n        drawer2.material.diffuseColor = new Color3.Red(); \n\n\n        drawer2.actionManager = new ActionManager(World.scene);\n        drawer2.actionManager.registerAction(\n            new ExecuteCodeAction(\n                {\n                    trigger: ActionManager.OnPickTrigger\n                    //parameter: 'r'\n                },\n                function () { World.scene.activeCamera == World.camera ? World.openDrawer(2) : World.closeDrawer()}\n            )\n        );\n\n        var drawer3 = MeshBuilder.CreatePlane(\"plane3\", {height:0.14, width: 0.46, sideOrientation: Mesh.DOUBLESIDE}, World.scene)\n        drawer3.parent = deskMesh\n        drawer3.position = new Vector3(0.355,0.295,0.30)\n        drawer3.material = new StandardMaterial(\"\", World.scene);\n        drawer3.material.diffuseColor = new Color3.Blue();\n\n        drawer3.actionManager = new ActionManager(World.scene);\n        drawer3.actionManager.registerAction(\n            new ExecuteCodeAction(\n                {\n                    trigger: ActionManager.OnPickTrigger\n                    //parameter: 'r'\n                },\n                function () { World.scene.activeCamera == World.camera ? World.openDrawer(3) : World.closeDrawer()}\n            )\n        );\n\n        var drawer4 = MeshBuilder.CreatePlane(\"plane4\", {height:0.14, width: 0.46, sideOrientation: Mesh.DOUBLESIDE}, World.scene)\n        drawer4.parent = deskMesh\n        drawer4.position = new Vector3(0.355,0.15,0.30)\n        drawer4.material = new StandardMaterial(\"\", World.scene);\n        drawer4.material.diffuseColor = new Color3(0, 206/255, 209/255)\n        drawer4.actionManager = new ActionManager(World.scene);\n        drawer4.actionManager.registerAction(\n            new ExecuteCodeAction(\n                {\n                    trigger: ActionManager.OnPickTrigger\n                    //parameter: 'r'\n                },\n                function () { World.scene.activeCamera == World.camera ? World.openDrawer(4) : World.closeDrawer()}\n            )\n        );         \n\n    }\n    \n    static setupLights() {\n        //light.intensity = 0.5;\n        var light0 = new DirectionalLight(\"Omni\", new Vector3(-7,5,17), World.scene);\n        //var light2 = new DirectionalLight(\"Omni\", new Vector3(7,-5,-17), World.scene);\n        //var light4 = new DirectionalLight(\"Omni\", new Vector3(0,0,0), World.scene);\n        var light1 = new PointLight(\"Omni\", new Vector3(-3,5,13), World.scene); \n        //var light3 = new PointLight(\"Omni\", new Vector3(3,5,-13), World.scene);  \n        //var light5 = new PointLight(\"Omni\", new Vector3(0,0,0), World.scene);\n        //var light6 = new PointLight(\"Omni\", new Vector3(0,3,-20), World.scene);\n\n       \n    }\n    \n    /*static updateCamera() {\n        if (typeof Avatar.mesh !== \"undefined\" && typeof World.camera !== \"undefined\" && Avatar.mesh !== null) {\n            World.camera.position.x = Avatar.mesh.position.x;\n            World.camera.position.y = Avatar.mesh.position.y + Avatar.height;\n            World.camera.position.z = Avatar.mesh.position.z;\n            World.camera.position.z -= Math.sin(Avatar.absoluteRotation - Math.PI) * -1 * World.cameraDistance;\n            World.camera.position.x -= Math.cos(Avatar.absoluteRotation - Math.PI) * -1 * World.cameraDistance;\n            var lookAt = new Vector3(Avatar.mesh.position.x, Avatar.mesh.position.y + Avatar.height, Avatar.mesh.position.z);\n            World.camera.setTarget(lookAt);\n        }\n    }*/\n}\n\nWorld.cameraDistance = 1.5;","import World from './World'\nimport {MeshBuilder, Vector3, StandardMaterial, Color3, Quaternion} from '@babylonjs/core';\nimport BillBoard from './BillBoard'\n\n\nexport default class Player {\n    \n    constructor(id, username) {\n        var height = 3;\n        this.id = id;\n        this.mesh = MeshBuilder.CreateBox(\"avatar\", {height: height, width: 1, depth: 1}, World.scene);\n        this.mesh.position = Vector3.Zero();\n        this.mesh.position.x = 0;\n        this.mesh.position.y = height/2;\n        this.mesh.position.z = 0;\n        this.mesh.material = Player.material;\n        this.billboard = new BillBoard(this.mesh, username);\n        Player.all.push(this);\n    }\n    \n    //Destroy player meshes\n    destroy() {\n        this.billboard.mesh.dispose();\n        this.mesh.dispose();\n    }\n    \n    //Find existing player or create if not exists\n    static find(playerID, username) {       \n        //Check if player is in our list\n        for (var objPlayer of Player.all) {\n            if (objPlayer.id === playerID) {\n                //Found player, so lets return it\n                return(objPlayer);\n            }\n        };                \n        //Player doesn't exist, so lets create a new one\n        console.log(playerID, username)\n        return(new Player(playerID, username));\n    }\n    \n    static init() {\n        Player.material = new StandardMaterial(\"matPlayer\", World.scene);\n        Player.material.diffuseColor = new Color3.Red();        \n    }\n    \n    //Find player and move them\n    static move(data) {\n   \n        var playerID = parseInt(data.id);\n        var objPlayer = Player.find(playerID, data.username);\n        objPlayer.transform(data.x, data.y, data.z, data.rotation);\n    }\n    \n    //Remove player from world\n    static remove(data) {\n        for (var objPlayer of Player.all) {\n            if (objPlayer.id === data.id) {\n                objPlayer.destroy();\n                break;\n            }\n        }\n        \n        //Remove me from list of all players\n        Player.all = Player.all.filter((obj) => {\n            return obj.id !== data.id;\n        });\n    }\n    \n    //Change position and rotation\n    transform(x, y, z, rotation) {\n        this.mesh.position.x = x;\n        this.mesh.position.y = y;\n        this.mesh.position.z = z;\n        this.mesh.rotationQuaternion = Quaternion.FromEulerAngles(0, -rotation, 0);\n    }\n}\n\nPlayer.all = new Array();","import World from './World'\nimport Avatar from './Avatar'\nimport Player from './Player'\nimport Input from './Input'\nimport io from \"socket.io-client\"\nimport { useHistory } from \"react-router-dom\";\n\n\n\nexport default class IO {\n    \n    static init() {\n            IO.currentRoomId = null\n            console.log(process.env.NODE_ENV)\n            //if(process.env.NODE_ENV === 'development'){\n                //IO.socket = io(\"http://localhost:3001/\", {reconnectionDelayMax: 10000})                \n            //} else{\n                IO.socket=io()                \n            //}\n\n            IO.socket.on(\"auth\", function(data){\n                if(data.success){\n                   IO.currentRoomId = data.roomId\n                   World.init()\n                   Player.init()\n                   Avatar.init(data.username);\n                   Input.init();\n                    //Avatar.send();\n                }\n\n                else {\n                    console.log(\"THAT ROOM DOESN'T EXIST\")\n\n                }\n            })\n\n            IO.socket.on(\"transform\", function(data){\n                switch(data.command) {\n                case \"playerGone\":\n                    Player.remove(data);\n                    break;\n                case \"playerMoved\":\n                    Player.move(data);\n                    break;\n                }\n            })\n\n\n\n            IO.socket.on(\"room modified\", function(data){\n                World.roomModification(data.actionCode)\n            })\n\n            /*IO.socket.on(\"all users\", users => {\n                const peers = [];\n                users.forEach(userID => {\n                    const peer = createPeer(userID, socketRef.current.id, stream);\n                    peersRef.current.push({\n                        peerID: userID,\n                        peer,\n                    })\n                    peers.push(peer);\n                })\n                setPeers(peers);\n            })*/\n\n\n\n        }\n\n     static login (username, roomId) {\n           IO.socket.emit('login', {username: username, roomId: roomId})\n     }\n\n}\n\n        /*Socket.ws.onmessage = (msg) => {\n            switch(msg.data) {\n                case \"playerGone\":\n                    Player.remove(json.data);\n                    break;\n                case \"playerMoved\":\n                    Player.move(json.data);\n                    break;\n            }\n        };*/\n\n        /*Socket.ws.onclose = () => {\n            alert(\"Connection closed\");\n        };\n        Socket.ws.onerror = (e) => {\n            console.log(\"Error\");\n        };\n    }*/\n\n\n","import React, { useState } from \"react\";\nimport IO from './IO'\n\n\nconst Login = (props) => {\n\tconst [userName, setUsername] = useState('')\n\n\treturn(\n\t<div>\n\t\t<h1>Welcome</h1>\n        <span>Username: </span><input onChange={e => setUsername(e.target.value)} type=\"text\" id=\"username\"/>\n        <button id=\"login\" onClick={() => IO.login(userName, props.roomId)}>{props.roomId ? \"Join Group\" : \"Create Group\"}</button>\n\t</div>\n\t)\n\n}\n\nexport default Login","import React, { useEffect, useRef, useState } from \"react\";\nimport IO from './IO'\nimport Login from './Login'\nimport './App.css';\nimport Peer from \"simple-peer\";\nimport { useParams } from \"react-router\";\n\n\n\n\n\nIO.init()\n\n\nconst AudioTag = (props) => {\n    const ref = useRef();\n\n    useEffect(() => {\n        props.peer.on(\"stream\", stream => {\n            ref.current.srcObject = stream;\n        })\n    }, []);\n\n    return (\n        <audio autoPlay ref={ref} />\n    );\n}\n\n\nconst Play = (props) => {\n  const [peers, setPeers] = useState([]);\n  const socketRef = useRef();\n  const userAudio = useRef();\n  const peersRef = useRef([]);\n  \n  const { roomId } = useParams();\n\n  \n  //const roomID = \"1\";\n\n   useEffect(() => {\n        socketRef.current = IO.socket\n        navigator.mediaDevices.getUserMedia({audio: true }).then(stream => {\n            //userAudio.current.srcObject = stream;\n            //socketRef.current.emit(\"join room\", roomID);\n            socketRef.current.on(\"all users\", users => {\n                const peers = [];\n                users.forEach(userID => {\n                    const peer = createPeer(userID, socketRef.current.id, stream);\n                    peersRef.current.push({\n                        peerID: userID,\n                        peer,\n                    })\n                    peers.push(peer);\n                })\n                setPeers(peers);\n            })\n\n            socketRef.current.on(\"user joined\", payload => {\n                const peer = addPeer(payload.signal, payload.callerID, stream);\n                peersRef.current.push({\n                    peerID: payload.callerID,\n                    peer,\n                })\n\n                setPeers(users => [...users, peer]);\n            });\n\n            socketRef.current.on(\"receiving returned signal\", payload => {\n                const item = peersRef.current.find(p => p.peerID === payload.id);\n                item.peer.signal(payload.signal);\n            });\n        })\n    }, []);\n\n    function createPeer(userToSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: true,\n            trickle: false,\n            stream,\n        });\n\n        peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"sending signal\", { userToSignal, callerID, signal })\n        })\n\n        return peer;\n    }\n\n    function addPeer(incomingSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: false,\n            trickle: false,\n            stream,\n        })\n\n        peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"returning signal\", { signal, callerID })\n        })\n        peer.signal(incomingSignal);\n\n        return peer;\n    }\n\n  return (\n    <div>\n\n        <Login roomId={roomId} />\n        {peers.map((peer, index) => {\n                return (\n                    <AudioTag key={index} peer={peer} />\n                );\n        })}\n        <p>{IO.currentRoomId && (\"Share this link to invite others to your escape room: \" + window.location.href +  IO.currentRoomId)}</p>\n        <canvas id=\"canvas\" style={{\"width\": \"100%\", \"height\": \"100%\"}}/>\n    </div>\n  )\n\n}\n\nexport default Play","import React from \"react\";\nimport Play from './Play'\nimport Login from './Login'\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nconst App = () => {\n\n\treturn(\n    <Router>\n        <Switch>\n          <Route path=\"/:roomId?\" children={<Play />} />\n        </Switch>\n    </Router>\t\t\n\t)\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}