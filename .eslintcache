[{"/Users/corygallagher/Documents/node_projects/escapegame/src/index.js":"1","/Users/corygallagher/Documents/node_projects/escapegame/src/App.js":"2","/Users/corygallagher/Documents/node_projects/escapegame/src/reportWebVitals.js":"3","/Users/corygallagher/Documents/node_projects/escapegame/src/IO.js":"4","/Users/corygallagher/Documents/node_projects/escapegame/src/Avatar.js":"5","/Users/corygallagher/Documents/node_projects/escapegame/src/Input.js":"6","/Users/corygallagher/Documents/node_projects/escapegame/src/BillBoard.js":"7","/Users/corygallagher/Documents/node_projects/escapegame/src/World.js":"8","/Users/corygallagher/Documents/node_projects/escapegame/src/Player.js":"9","/Users/corygallagher/Documents/node_projects/escapegame/src/Chat.js":"10"},{"size":500,"mtime":1606972227891,"results":"11","hashOfConfig":"12"},{"size":3144,"mtime":1607302707045,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1606972227892,"results":"14","hashOfConfig":"12"},{"size":2001,"mtime":1607299809302,"results":"15","hashOfConfig":"12"},{"size":3542,"mtime":1607404528245,"results":"16","hashOfConfig":"12"},{"size":1551,"mtime":1607397557358,"results":"17","hashOfConfig":"12"},{"size":1485,"mtime":1607093392762,"results":"18","hashOfConfig":"12"},{"size":3971,"mtime":1607401570765,"results":"19","hashOfConfig":"12"},{"size":2413,"mtime":1607095092457,"results":"20","hashOfConfig":"12"},{"size":653,"mtime":1607121356447,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"l0rxfz",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/corygallagher/Documents/node_projects/escapegame/src/index.js",[],["48","49"],"/Users/corygallagher/Documents/node_projects/escapegame/src/App.js",["50","51"],"import React, { useEffect, useRef, useState } from \"react\";\nimport IO from './IO'\nimport './App.css';\nimport Peer from \"simple-peer\";\n\n\nIO.init()\n\n\nconst AudioTag = (props) => {\n    const ref = useRef();\n\n    useEffect(() => {\n        props.peer.on(\"stream\", stream => {\n            ref.current.srcObject = stream;\n        })\n    }, []);\n\n    return (\n        <audio autoPlay ref={ref} />\n    );\n}\n\n\nconst App = () => {\n  const [peers, setPeers] = useState([]);\n  const socketRef = useRef();\n  const userAudio = useRef();\n  const peersRef = useRef([]);\n  const [userName, setUsername] = useState('')\n  //const roomID = \"1\";\n\n   useEffect(() => {\n        socketRef.current = IO.socket\n        navigator.mediaDevices.getUserMedia({audio: true }).then(stream => {\n            //userAudio.current.srcObject = stream;\n            //socketRef.current.emit(\"join room\", roomID);\n            socketRef.current.on(\"all users\", users => {\n                const peers = [];\n                users.forEach(userID => {\n                    const peer = createPeer(userID, socketRef.current.id, stream);\n                    peersRef.current.push({\n                        peerID: userID,\n                        peer,\n                    })\n                    peers.push(peer);\n                })\n                setPeers(peers);\n            })\n\n            socketRef.current.on(\"user joined\", payload => {\n                const peer = addPeer(payload.signal, payload.callerID, stream);\n                peersRef.current.push({\n                    peerID: payload.callerID,\n                    peer,\n                })\n\n                setPeers(users => [...users, peer]);\n            });\n\n            socketRef.current.on(\"receiving returned signal\", payload => {\n                const item = peersRef.current.find(p => p.peerID === payload.id);\n                item.peer.signal(payload.signal);\n            });\n        })\n    }, []);\n\n    function createPeer(userToSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: true,\n            trickle: false,\n            stream,\n        });\n\n        peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"sending signal\", { userToSignal, callerID, signal })\n        })\n\n        return peer;\n    }\n\n    function addPeer(incomingSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: false,\n            trickle: false,\n            stream,\n        })\n\n        peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"returning signal\", { signal, callerID })\n        })\n        peer.signal(incomingSignal);\n\n        return peer;\n    }\n\n  return (\n    <div>\n        <h1>Multiplayer Game</h1>\n        <span>Username: </span><input onChange={e => setUsername(e.target.value)} type=\"text\" id=\"username\"/>\n        {peers.map((peer, index) => {\n                return (\n                    <AudioTag key={index} peer={peer} />\n                );\n        })}\n        <button id=\"login\" onClick={() => IO.login(userName)}>Log-in</button>\n        <canvas id=\"canvas\" style={{\"width\": \"100%\", \"height\": \"100%\"}}/>\n    </div>\n  )\n\n}\n\nexport default App","/Users/corygallagher/Documents/node_projects/escapegame/src/reportWebVitals.js",[],"/Users/corygallagher/Documents/node_projects/escapegame/src/IO.js",["52"],"import World from './World'\nimport Avatar from './Avatar'\nimport Player from './Player'\nimport Input from './Input'\nimport io from \"socket.io-client\"\n\nexport default class IO {\n    \n    static init() {\n\n            IO.socket = io(\"http://localhost:3001/\", {\n              reconnectionDelayMax: 10000\n            })\n\n            IO.socket.on(\"auth\", function(data){\n                    World.init()\n                    Player.init()\n                    Avatar.init(data.username);\n                    Input.init();     \n                    Avatar.send();\n            })\n\n            IO.socket.on(\"transform\", function(data){\n                console.log(data)\n                switch(data.command) {\n                case \"playerGone\":\n                    Player.remove(data);\n                    break;\n                case \"playerMoved\":\n                    Player.move(data);\n                    break;\n                }\n            })\n\n            /*IO.socket.on(\"all users\", users => {\n                const peers = [];\n                users.forEach(userID => {\n                    const peer = createPeer(userID, socketRef.current.id, stream);\n                    peersRef.current.push({\n                        peerID: userID,\n                        peer,\n                    })\n                    peers.push(peer);\n                })\n                setPeers(peers);\n            })*/\n\n\n\n        }\n\n     static login (username) {\n           IO.socket.emit('login', {username: username})\n     }\n\n}\n\n        /*Socket.ws.onmessage = (msg) => {\n            switch(msg.data) {\n                case \"playerGone\":\n                    Player.remove(json.data);\n                    break;\n                case \"playerMoved\":\n                    Player.move(json.data);\n                    break;\n            }\n        };*/\n\n        /*Socket.ws.onclose = () => {\n            alert(\"Connection closed\");\n        };\n        Socket.ws.onerror = (e) => {\n            console.log(\"Error\");\n        };\n    }*/\n\n\n","/Users/corygallagher/Documents/node_projects/escapegame/src/Avatar.js",["53"],"/Users/corygallagher/Documents/node_projects/escapegame/src/Input.js",["54","55"],"export default class Input {\n    \n    static init() {\n        window.addEventListener(\"keydown\", this.keydownEvent);\n        window.addEventListener(\"keyup\", this.keyupEvent);\n        window.addEventListener(\"blur\", this.keyupEvent);\n    }\n\n    static keydownEvent(e) {\n        switch (e.keyCode) {\n            case 38: //UP\n            case 87: //W\n                 e.preventDefault()\n                Input.key.up = true;\n                break;\n            case 37: //LEFT\n            case 65: //A\n                Input.key.left = true;\n                break;\n            case 39: //RIGHT\n            case 68: //D\n                Input.key.right = true;\n                break;\n            case 40: //DOWN\n            case 83: //S\n                 e.preventDefault()               \n                Input.key.down = true;\n                break;\n        }\n    }\n    \n    static keyupEvent(e) {\n        switch (e.keyCode) {\n            case 38: //UP\n            case 87: //W\n                e.preventDefault()\n                Input.key.up = false;\n                break;\n            case 37: //LEFT\n            case 65: //A\n                Input.key.left = false;\n                break;\n            case 39: //RIGHT\n            case 68: //D\n                Input.key.right = false;\n                break;\n            case 40: //DOWN\n            case 83: //S\n                 e.preventDefault()\n                Input.key.down = false;\n                break;\n        }\n    }\n}\n\nInput.key = {\n    down:false,\n    up:false,\n    left:false,\n    right:false\n};","/Users/corygallagher/Documents/node_projects/escapegame/src/BillBoard.js",[],"/Users/corygallagher/Documents/node_projects/escapegame/src/World.js",["56"],"import Avatar from './Avatar'\n//import Chat from './Chat'\nimport {FreeCamera, Vector3, StandardMaterial,HemisphericLight, Texture, MeshBuilder, Engine, Scene, Mesh, Tools, VertexBuffer} from '@babylonjs/core';\n\n\nexport default class World {\n    static init() {\n        World.canvas = document.getElementById(\"canvas\");\n        var engine = new Engine(World.canvas, true);\n        World.meshes = []\n\n        \n        World.scene = new Scene(engine);\n        World.setupCamera();        \n        World.setupLights();\n        World.setupGround();\n        World.setupWalls();\n        //Chat.init()\n\n        engine.runRenderLoop(() => {\n            World.scene.render();\n            Avatar.update(World.meshes);\n            World.updateCamera();\n        });        \n        \n        //Resize event\n        window.addEventListener(\"resize\", () => {\n            engine.resize();\n        });\n    }\n    \n    static setupCamera() {\n        World.camera = new FreeCamera(\"thirdPersonCam\", Vector3.Zero(), World.scene);\n        World.camera.position.x -= Math.sin(-Math.PI/2) * -1 * World.cameraDistance;\n        World.camera.position.y = Avatar.height + Avatar.height/2;\n        World.camera.position.z -= Math.cos(-Math.PI/2) * -1 * World.cameraDistance;\n        var lookAt = Vector3.Zero();\n        lookAt.y = Avatar.height + Avatar.height/2;\n        World.camera.setTarget(lookAt);\n        World.scene.activeCameras.push(World.camera);\n    }\n    \n    static setupGround() {\n        var ground = MeshBuilder.CreateGround(\"ground\", {height: 3, width: 3, subdivisions: 4}, World.scene);\n        ground.position = Vector3.Zero();\n        ground.material = new StandardMaterial(\"matGround\", World.scene);\n        ground.material.diffuseTexture = new Texture(\"ground.jpg\", World.scene);\n    }\n\n\n    static setupWalls(){\n        var wall1 = MeshBuilder.CreateBox(\"wall1\", {size: 1, sideOrientation: Mesh.DOUBLESIDE}, World.scene);\n        wall1.material = new StandardMaterial(\"\"); \n        wall1.position = new Vector3(2,0,0);\n        wall1.rotation = new Vector3(0,Tools.ToRadians(90),0);\n        wall1.scaling.x = 3;\n        World.meshes.push(wall1)\n        var wall2 = MeshBuilder.CreateBox(\"wall2\", {size: 1, sideOrientation: Mesh.DOUBLESIDE}, World.scene);;\n        wall2.position = new Vector3(0,0,-2);\n        wall2.material = new StandardMaterial(\"\");\n        wall2.scaling.x = 3;\n        World.meshes.push(wall2)\n        var wall3 = MeshBuilder.CreateBox(\"wall3\", {size: 1, sideOrientation: Mesh.DOUBLESIDE}, World.scene);;\n        wall3.material = new StandardMaterial(\"\"); \n        wall3.position = new Vector3(-2,0,0);\n        wall3.rotation = new Vector3(0,Tools.ToRadians(90),0);\n        wall3.scaling.x = 3;\n        World.meshes.push(wall3)\n        var wall4 = MeshBuilder.CreateBox(\"wall4\", {size: 1, sideOrientation: Mesh.DOUBLESIDE}, World.scene);;\n        wall4.position = new Vector3(0,0,2);\n        wall4.material = new StandardMaterial(\"\");\n        wall4.scaling.x = 3;\n        World.meshes.push(wall4)\n    }\n    \n    static setupLights() {\n        var light = new HemisphericLight(\"light1\", new Vector3(1, 1, 0.5), World.scene);\n        light.intensity = 0.5;        \n    }\n    \n    static updateCamera() {\n        if (typeof Avatar.mesh !== \"undefined\" && typeof World.camera !== \"undefined\" && Avatar.mesh !== null) {\n            World.camera.position.x = Avatar.mesh.position.x;\n            World.camera.position.y = Avatar.mesh.position.y + Avatar.height;\n            World.camera.position.z = Avatar.mesh.position.z;\n            World.camera.position.z -= Math.sin(Avatar.absoluteRotation - Math.PI) * -1 * World.cameraDistance;\n            World.camera.position.x -= Math.cos(Avatar.absoluteRotation - Math.PI) * -1 * World.cameraDistance;\n            var lookAt = new Vector3(Avatar.mesh.position.x, Avatar.mesh.position.y + Avatar.height, Avatar.mesh.position.z);\n            World.camera.setTarget(lookAt);\n        }\n    }\n}\n\nWorld.cameraDistance = 1.5;","/Users/corygallagher/Documents/node_projects/escapegame/src/Player.js",["57"],"import World from './World'\nimport {MeshBuilder, Vector3, StandardMaterial, Color3, Quaternion} from '@babylonjs/core';\nimport BillBoard from './BillBoard'\n\n\nexport default class Player {\n    \n    constructor(id, username) {\n        var height = 0.3;\n        this.id = id;\n        this.mesh = MeshBuilder.CreateBox(\"avatar\", {height: height, width: 0.1, depth: 0.1}, World.scene);\n        this.mesh.position = Vector3.Zero();\n        this.mesh.position.x = 0;\n        this.mesh.position.y = height/2;\n        this.mesh.position.z = 0;\n        this.mesh.material = Player.material;\n        this.billboard = new BillBoard(this.mesh, username);\n        Player.all.push(this);\n    }\n    \n    //Destroy player meshes\n    destroy() {\n        this.billboard.mesh.dispose();\n        this.mesh.dispose();\n    }\n    \n    //Find existing player or create if not exists\n    static find(playerID, username) {       \n        //Check if player is in our list\n        for (var objPlayer of Player.all) {\n            if (objPlayer.id === playerID) {\n                //Found player, so lets return it\n                return(objPlayer);\n            }\n        };                \n        //Player doesn't exist, so lets create a new one\n        console.log(playerID, username)\n        return(new Player(playerID, username));\n    }\n    \n    static init() {\n        Player.material = new StandardMaterial(\"matPlayer\", World.scene);\n        Player.material.diffuseColor = new Color3.Red();        \n    }\n    \n    //Find player and move them\n    static move(data) {\n   \n        var playerID = parseInt(data.id);\n        var objPlayer = Player.find(playerID, data.username);\n        objPlayer.transform(data.x, data.y, data.z, data.rotation);\n    }\n    \n    //Remove player from world\n    static remove(data) {\n        for (var objPlayer of Player.all) {\n            if (objPlayer.id === data.id) {\n                objPlayer.destroy();\n                break;\n            }\n        }\n        \n        //Remove me from list of all players\n        Player.all = Player.all.filter((obj) => {\n            return obj.id !== data.id;\n        });\n    }\n    \n    //Change position and rotation\n    transform(x, y, z, rotation) {\n        this.mesh.position.x = x;\n        this.mesh.position.y = y;\n        this.mesh.position.z = z;\n        this.mesh.rotationQuaternion = Quaternion.FromEulerAngles(0, -rotation, 0);\n    }\n}\n\nPlayer.all = new Array();","/Users/corygallagher/Documents/node_projects/escapegame/src/Chat.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":17,"column":8,"nodeType":"64","endLine":17,"endColumn":10,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":28,"column":9,"nodeType":"68","messageId":"69","endLine":28,"endColumn":18},{"ruleId":"70","severity":1,"message":"71","line":25,"column":17,"nodeType":"72","messageId":"73","endLine":32,"endColumn":18},{"ruleId":"66","severity":1,"message":"74","line":3,"column":70,"nodeType":"68","messageId":"69","endLine":3,"endColumn":82},{"ruleId":"70","severity":1,"message":"71","line":10,"column":9,"nodeType":"72","messageId":"73","endLine":29,"endColumn":10},{"ruleId":"70","severity":1,"message":"71","line":33,"column":9,"nodeType":"72","messageId":"73","endLine":52,"endColumn":10},{"ruleId":"66","severity":1,"message":"74","line":3,"column":115,"nodeType":"68","messageId":"69","endLine":3,"endColumn":127},{"ruleId":"75","severity":1,"message":"76","line":78,"column":14,"nodeType":"77","messageId":"78","endLine":78,"endColumn":25},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.peer'. Either include it or remove the dependency array.","ArrayExpression",["81"],"no-unused-vars","'userAudio' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'VertexBuffer' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [props.peer]",{"range":"84","text":"85"},[333,335],"[props.peer]"]